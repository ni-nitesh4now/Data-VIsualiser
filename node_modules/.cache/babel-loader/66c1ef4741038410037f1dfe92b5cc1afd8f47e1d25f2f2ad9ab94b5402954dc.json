{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nites\\\\OneDrive\\\\Desktop\\\\Visualiser\\\\data-visualization\\\\src\\\\Components\\\\Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherChart = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=London&appid=YOUR_API_KEY`);\n        setWeatherData(response.data.list);\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n      }\n    };\n    fetchWeatherData();\n  }, []);\n  if (weatherData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  const chartData = {\n    labels: weatherData.map(data => data.dt_txt),\n    datasets: [{\n      label: \"Temperature (°C)\",\n      data: weatherData.map(data => data.main.temp),\n      fill: false,\n      borderColor: \"rgba(75,192,192,1)\",\n      borderWidth: 2\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherChart, \"/WBsAESNl5X9UOGQ8x5/AmmeTCo=\");\n_c = WeatherChart;\nexport default WeatherChart;\nvar _c;\n$RefreshReg$(_c, \"WeatherChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","jsxDEV","_jsxDEV","WeatherChart","_s","weatherData","setWeatherData","fetchWeatherData","response","get","data","list","error","console","length","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","labels","map","dt_txt","datasets","label","main","temp","fill","borderColor","borderWidth","_c","$RefreshReg$"],"sources":["C:/Users/nites/OneDrive/Desktop/Visualiser/data-visualization/src/Components/Chart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst WeatherChart = () => {\r\n  const [weatherData, setWeatherData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchWeatherData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://api.openweathermap.org/data/2.5/forecast?q=London&appid=YOUR_API_KEY`\r\n        );\r\n        setWeatherData(response.data.list);\r\n      } catch (error) {\r\n        console.error(\"Error fetching weather data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchWeatherData();\r\n  }, []);\r\n\r\n  if (weatherData.length === 0) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const chartData = {\r\n    labels: weatherData.map((data) => data.dt_txt),\r\n    datasets: [\r\n      {\r\n        label: \"Temperature (°C)\",\r\n        data: weatherData.map((data) => data.main.temp),\r\n        fill: false,\r\n        borderColor: \"rgba(75,192,192,1)\",\r\n        borderWidth: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Weather Forecast</h2>\r\n      <Line data={chartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC7B,8EACH,CAAC;QACDH,cAAc,CAACE,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAC;MACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDL,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,WAAW,CAACS,MAAM,KAAK,CAAC,EAAE;IAC5B,oBAAOZ,OAAA;MAAAa,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAEhB,WAAW,CAACiB,GAAG,CAAEZ,IAAI,IAAKA,IAAI,CAACa,MAAM,CAAC;IAC9CC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,kBAAkB;MACzBf,IAAI,EAAEL,WAAW,CAACiB,GAAG,CAAEZ,IAAI,IAAKA,IAAI,CAACgB,IAAI,CAACC,IAAI,CAAC;MAC/CC,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE,oBAAoB;MACjCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,oBACE5B,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBjB,OAAA,CAACF,IAAI;MAACU,IAAI,EAAEU;IAAU;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;AAACf,EAAA,CAzCID,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AA2ClB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}