{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nites\\\\OneDrive\\\\Desktop\\\\Visualiser\\\\data-visualization\\\\src\\\\Components\\\\Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { tsvParse } from \"d3-dsv\";\nimport { timeParse } from \"d3-time-format\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction parseData(parse) {\n  return function (d) {\n    d.date = parse(d.date);\n    d.open = +d.open;\n    d.high = +d.high;\n    d.low = +d.low;\n    d.close = +d.close;\n    d.volume = +d.volume;\n    return d;\n  };\n}\nconst parseDate = timeParse(\"%Y-%m-%d\");\nconst StockChart = () => {\n  _s();\n  const [stockData, setStockData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getData();\n        setStockData(data);\n      } catch (error) {\n        console.error(\"Error fetching stock data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  if (!stockData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stock Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 600,\n      height: 400,\n      data: stockData,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"close\",\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(StockChart, \"cZpNEwUGa1CiLUQNop4F6FWcIRU=\");\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","useState","useEffect","tsvParse","timeParse","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","parseData","parse","d","date","open","high","low","close","volume","parseDate","StockChart","_s","stockData","setStockData","fetchData","data","getData","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","dataKey","strokeDasharray","type","stroke","_c","$RefreshReg$"],"sources":["C:/Users/nites/OneDrive/Desktop/Visualiser/data-visualization/src/Components/Chart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { tsvParse } from \"d3-dsv\";\r\nimport { timeParse } from \"d3-time-format\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\r\nfunction parseData(parse) {\r\n    return function (d) {\r\n      d.date = parse(d.date);\r\n      d.open = +d.open;\r\n      d.high = +d.high;\r\n      d.low = +d.low;\r\n      d.close = +d.close;\r\n      d.volume = +d.volume;\r\n  \r\n      return d;\r\n    };\r\n  }\r\nconst parseDate = timeParse(\"%Y-%m-%d\");\r\n  \r\n\r\nconst StockChart = () => {\r\n  const [stockData, setStockData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = await getData();\r\n        setStockData(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching stock data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (!stockData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Stock Chart</h2>\r\n      <LineChart width={600} height={400} data={stockData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n        <XAxis dataKey=\"date\" />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"close\" stroke=\"#8884d8\" />\r\n      </LineChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}